name: Docker Image CI/CD

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx  # Fixed indentation
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Generate timestamp
        id: timestamp
        run: echo "TIMESTAMP=$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV

      - name: Build and Tag Docker Image
        run: |
          IMAGE_TAG=murali54321/shopping-app:${{ env.TIMESTAMP }}
          docker buildx build --platform linux/amd64 -t $IMAGE_TAG -t murali54321/shopping-app:latest -f Dockerfile . --load
          echo "Built and tagged image: $IMAGE_TAG and latest"
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      - name: List Docker Images (Debugging)
        run: docker images

      - name: Save Docker Image
        run: docker save -o image.tar ${{ env.IMAGE_TAG }}

      - name: Upload Docker Image Artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: image.tar

  test:
    name: Test Docker Image
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download Image Artifact
        uses: actions/download-artifact@v4
        with:
          name: docker-image
          path: .

      - name: Load Docker Image
        run: docker load -i image.tar

      - name: Run Container for Testing
        run: |
          docker run -d --name test-container ${{ needs.build.outputs.IMAGE_TAG }}
          sleep 15
          docker ps -a

      - name: Check Container Health
        run: |
          docker inspect --format='{{.State.Status}}' test-container | grep -q running || exit 1

      - name: Cleanup Test Container
        if: always()
        run: docker rm -f test-container

  deploy:
    name: Deploy Docker Image
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Push Docker Images
        run: |
          docker push ${{ needs.build.outputs.IMAGE_TAG }}
          docker push murali54321/shopping-app:latest
     